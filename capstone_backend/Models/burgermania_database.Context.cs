//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace capstone_backend.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbbmEntities : DbContext
    {
        public dbbmEntities()
            : base("name=dbbmEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<activity_log> activity_log { get; set; }
        public virtual DbSet<archive_users> archive_users { get; set; }
        public virtual DbSet<bundleProd> bundleProds { get; set; }
        public virtual DbSet<code_verifications> code_verifications { get; set; }
        public virtual DbSet<customer_Orders> customer_Orders { get; set; }
        public virtual DbSet<customerBasicInformation> customerBasicInformations { get; set; }
        public virtual DbSet<excelStorage> excelStorages { get; set; }
        public virtual DbSet<expiration> expirations { get; set; }
        public virtual DbSet<forgotpassword_identifier> forgotpassword_identifier { get; set; }
        public virtual DbSet<location> locations { get; set; }
        public virtual DbSet<login_history> login_history { get; set; }
        public virtual DbSet<paymentDetail> paymentDetails { get; set; }
        public virtual DbSet<product_finalization> product_finalization { get; set; }
        public virtual DbSet<product_finalization_raw> product_finalization_raw { get; set; }
        public virtual DbSet<product_inventory> product_inventory { get; set; }
        public virtual DbSet<productreport> productreports { get; set; }
        public virtual DbSet<puchase_orders> puchase_orders { get; set; }
        public virtual DbSet<savedAdditionalQuantity> savedAdditionalQuantities { get; set; }
        public virtual DbSet<selectedraw> selectedraws { get; set; }
        public virtual DbSet<sessionScan> sessionScans { get; set; }
        public virtual DbSet<stock_on_hand> stock_on_hand { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<tbcategory> tbcategories { get; set; }
        public virtual DbSet<tbcategoryfinal> tbcategoryfinals { get; set; }
        public virtual DbSet<tbexceltest> tbexceltests { get; set; }
        public virtual DbSet<tbinventsetting> tbinventsettings { get; set; }
        public virtual DbSet<tbposetting> tbposettings { get; set; }
        public virtual DbSet<tbtesting> tbtestings { get; set; }
        public virtual DbSet<testingtable> testingtables { get; set; }
        public virtual DbSet<user_google_allow> user_google_allow { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<supplier_find_duplicate> supplier_find_duplicate { get; set; }
        public virtual DbSet<warning_expiration_10_days> warning_expiration_10_days { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
        public virtual DbSet<ipv6_database_firewall_rules> ipv6_database_firewall_rules { get; set; }
    
        public virtual int ascend_quantity(string pcode, Nullable<int> quantity, Nullable<int> state)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ascend_quantity", pcodeParameter, quantityParameter, stateParameter);
        }
    
        public virtual int change_password_changer(string email, string password, Nullable<int> state)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("change_password_changer", emailParameter, passwordParameter, stateParameter);
        }
    
        public virtual int clearselectedraw(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clearselectedraw", stateParameter);
        }
    
        public virtual int deductquantityfinal(string pcode, Nullable<int> quantity, Nullable<int> state)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deductquantityfinal", pcodeParameter, quantityParameter, stateParameter);
        }
    
        public virtual ObjectResult<find_duplicates_Result> find_duplicates(string sid, Nullable<int> state)
        {
            var sidParameter = sid != null ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<find_duplicates_Result>("find_duplicates", sidParameter, stateParameter);
        }
    
        public virtual int istokenupdater(string istoken, string email, Nullable<int> action)
        {
            var istokenParameter = istoken != null ?
                new ObjectParameter("istoken", istoken) :
                new ObjectParameter("istoken", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("istokenupdater", istokenParameter, emailParameter, actionParameter);
        }
    
        public virtual int product_finalization_activator(Nullable<int> id, Nullable<int> state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("product_finalization_activator", idParameter, stateParameter);
        }
    
        public virtual int quantity_decrease_manager(Nullable<int> id, Nullable<int> quantity, string pcode, Nullable<int> state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("quantity_decrease_manager", idParameter, quantityParameter, pcodeParameter, stateParameter);
        }
    
        public virtual int quantity_refill_increase_manager(Nullable<int> id, Nullable<int> quantity, Nullable<int> state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("quantity_refill_increase_manager", idParameter, quantityParameter, stateParameter);
        }
    
        public virtual ObjectResult<sproc_get_products_fromInventory_via_code_Result> sproc_get_products_fromInventory_via_code(Nullable<int> state, string code)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_get_products_fromInventory_via_code_Result>("sproc_get_products_fromInventory_via_code", stateParameter, codeParameter);
        }
    
        public virtual int sproc_update_isdone_forgotpassword(string forgotcode, Nullable<int> state)
        {
            var forgotcodeParameter = forgotcode != null ?
                new ObjectParameter("forgotcode", forgotcode) :
                new ObjectParameter("forgotcode", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_update_isdone_forgotpassword", forgotcodeParameter, stateParameter);
        }
    
        public virtual int stored_supplier(Nullable<int> id, string sfname, string slname, string sprimary, string ssecondary, string snumber, string semail, string simg, string isstatus, Nullable<int> state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sfnameParameter = sfname != null ?
                new ObjectParameter("sfname", sfname) :
                new ObjectParameter("sfname", typeof(string));
    
            var slnameParameter = slname != null ?
                new ObjectParameter("slname", slname) :
                new ObjectParameter("slname", typeof(string));
    
            var sprimaryParameter = sprimary != null ?
                new ObjectParameter("sprimary", sprimary) :
                new ObjectParameter("sprimary", typeof(string));
    
            var ssecondaryParameter = ssecondary != null ?
                new ObjectParameter("ssecondary", ssecondary) :
                new ObjectParameter("ssecondary", typeof(string));
    
            var snumberParameter = snumber != null ?
                new ObjectParameter("snumber", snumber) :
                new ObjectParameter("snumber", typeof(string));
    
            var semailParameter = semail != null ?
                new ObjectParameter("semail", semail) :
                new ObjectParameter("semail", typeof(string));
    
            var simgParameter = simg != null ?
                new ObjectParameter("simg", simg) :
                new ObjectParameter("simg", typeof(string));
    
            var isstatusParameter = isstatus != null ?
                new ObjectParameter("isstatus", isstatus) :
                new ObjectParameter("isstatus", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stored_supplier", idParameter, sfnameParameter, slnameParameter, sprimaryParameter, ssecondaryParameter, snumberParameter, semailParameter, simgParameter, isstatusParameter, stateParameter);
        }
    
        public virtual int stored_update_purchase_status(Nullable<int> id, Nullable<int> state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stored_update_purchase_status", idParameter, stateParameter);
        }
    
        public virtual ObjectResult<stored_view_expiration_date_Result> stored_view_expiration_date(Nullable<int> state, string pcode)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stored_view_expiration_date_Result>("stored_view_expiration_date", stateParameter, pcodeParameter);
        }
    
        public virtual int update_invent_settings(Nullable<int> state, string inventorysetting, string inventorysupplier, string inventexpiration)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var inventorysettingParameter = inventorysetting != null ?
                new ObjectParameter("inventorysetting", inventorysetting) :
                new ObjectParameter("inventorysetting", typeof(string));
    
            var inventorysupplierParameter = inventorysupplier != null ?
                new ObjectParameter("inventorysupplier", inventorysupplier) :
                new ObjectParameter("inventorysupplier", typeof(string));
    
            var inventexpirationParameter = inventexpiration != null ?
                new ObjectParameter("inventexpiration", inventexpiration) :
                new ObjectParameter("inventexpiration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_invent_settings", stateParameter, inventorysettingParameter, inventorysupplierParameter, inventexpirationParameter);
        }
    
        public virtual int update_product_inventory(Nullable<int> productid, string productname, Nullable<int> productquantity, Nullable<decimal> productprice, Nullable<decimal> producttotal, string productsupplier, string productimg, string productcategory, string pcode, Nullable<int> state)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var productquantityParameter = productquantity.HasValue ?
                new ObjectParameter("productquantity", productquantity) :
                new ObjectParameter("productquantity", typeof(int));
    
            var productpriceParameter = productprice.HasValue ?
                new ObjectParameter("productprice", productprice) :
                new ObjectParameter("productprice", typeof(decimal));
    
            var producttotalParameter = producttotal.HasValue ?
                new ObjectParameter("producttotal", producttotal) :
                new ObjectParameter("producttotal", typeof(decimal));
    
            var productsupplierParameter = productsupplier != null ?
                new ObjectParameter("productsupplier", productsupplier) :
                new ObjectParameter("productsupplier", typeof(string));
    
            var productimgParameter = productimg != null ?
                new ObjectParameter("productimg", productimg) :
                new ObjectParameter("productimg", typeof(string));
    
            var productcategoryParameter = productcategory != null ?
                new ObjectParameter("productcategory", productcategory) :
                new ObjectParameter("productcategory", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_product_inventory", productidParameter, productnameParameter, productquantityParameter, productpriceParameter, producttotalParameter, productsupplierParameter, productimgParameter, productcategoryParameter, pcodeParameter, stateParameter);
        }
    
        public virtual int update_product_status(Nullable<int> prodid, Nullable<int> state)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_product_status", prodidParameter, stateParameter);
        }
    
        public virtual int update_sendAttempts(string email, string code, string action)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_sendAttempts", emailParameter, codeParameter, actionParameter);
        }
    
        public virtual int update_session_stats(string email, string action)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_session_stats", emailParameter, actionParameter);
        }
    
        public virtual int update_settings(Nullable<int> state, string enablePO, string enablepoinventry, string enablelistview, string viewentry)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var enablePOParameter = enablePO != null ?
                new ObjectParameter("enablePO", enablePO) :
                new ObjectParameter("enablePO", typeof(string));
    
            var enablepoinventryParameter = enablepoinventry != null ?
                new ObjectParameter("enablepoinventry", enablepoinventry) :
                new ObjectParameter("enablepoinventry", typeof(string));
    
            var enablelistviewParameter = enablelistview != null ?
                new ObjectParameter("enablelistview", enablelistview) :
                new ObjectParameter("enablelistview", typeof(string));
    
            var viewentryParameter = viewentry != null ?
                new ObjectParameter("viewentry", viewentry) :
                new ObjectParameter("viewentry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_settings", stateParameter, enablePOParameter, enablepoinventryParameter, enablelistviewParameter, viewentryParameter);
        }
    
        public virtual int user_status_updater(Nullable<int> id, Nullable<int> action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("user_status_updater", idParameter, actionParameter);
        }
    }
}
