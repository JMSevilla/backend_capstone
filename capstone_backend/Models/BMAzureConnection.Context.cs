//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace capstone_backend.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbbmEntities : DbContext
    {
        public dbbmEntities()
            : base("name=dbbmEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<code_verifications> code_verifications { get; set; }
        public virtual DbSet<excelStorage> excelStorages { get; set; }
        public virtual DbSet<location> locations { get; set; }
        public virtual DbSet<product_inventory> product_inventory { get; set; }
        public virtual DbSet<sessionScan> sessionScans { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<tbexceltest> tbexceltests { get; set; }
        public virtual DbSet<user_google_allow> user_google_allow { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<supplier_find_duplicate> supplier_find_duplicate { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int stored_supplier(Nullable<int> id, string sfname, string slname, string sprimary, string ssecondary, string snumber, string semail, string simg, string isstatus, Nullable<int> state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sfnameParameter = sfname != null ?
                new ObjectParameter("sfname", sfname) :
                new ObjectParameter("sfname", typeof(string));
    
            var slnameParameter = slname != null ?
                new ObjectParameter("slname", slname) :
                new ObjectParameter("slname", typeof(string));
    
            var sprimaryParameter = sprimary != null ?
                new ObjectParameter("sprimary", sprimary) :
                new ObjectParameter("sprimary", typeof(string));
    
            var ssecondaryParameter = ssecondary != null ?
                new ObjectParameter("ssecondary", ssecondary) :
                new ObjectParameter("ssecondary", typeof(string));
    
            var snumberParameter = snumber != null ?
                new ObjectParameter("snumber", snumber) :
                new ObjectParameter("snumber", typeof(string));
    
            var semailParameter = semail != null ?
                new ObjectParameter("semail", semail) :
                new ObjectParameter("semail", typeof(string));
    
            var simgParameter = simg != null ?
                new ObjectParameter("simg", simg) :
                new ObjectParameter("simg", typeof(string));
    
            var isstatusParameter = isstatus != null ?
                new ObjectParameter("isstatus", isstatus) :
                new ObjectParameter("isstatus", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stored_supplier", idParameter, sfnameParameter, slnameParameter, sprimaryParameter, ssecondaryParameter, snumberParameter, semailParameter, simgParameter, isstatusParameter, stateParameter);
        }
    
        public virtual int stored_user_registration(string firstname, string lastname, string municipality, string province, string address, string companyname, string address_type, string email, string password, Nullable<int> mobileno, string istype, string isverified, string isstatus, string isgoogleverified, string state_action)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var municipalityParameter = municipality != null ?
                new ObjectParameter("municipality", municipality) :
                new ObjectParameter("municipality", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var address_typeParameter = address_type != null ?
                new ObjectParameter("address_type", address_type) :
                new ObjectParameter("address_type", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var mobilenoParameter = mobileno.HasValue ?
                new ObjectParameter("mobileno", mobileno) :
                new ObjectParameter("mobileno", typeof(int));
    
            var istypeParameter = istype != null ?
                new ObjectParameter("istype", istype) :
                new ObjectParameter("istype", typeof(string));
    
            var isverifiedParameter = isverified != null ?
                new ObjectParameter("isverified", isverified) :
                new ObjectParameter("isverified", typeof(string));
    
            var isstatusParameter = isstatus != null ?
                new ObjectParameter("isstatus", isstatus) :
                new ObjectParameter("isstatus", typeof(string));
    
            var isgoogleverifiedParameter = isgoogleverified != null ?
                new ObjectParameter("isgoogleverified", isgoogleverified) :
                new ObjectParameter("isgoogleverified", typeof(string));
    
            var state_actionParameter = state_action != null ?
                new ObjectParameter("state_action", state_action) :
                new ObjectParameter("state_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stored_user_registration", firstnameParameter, lastnameParameter, municipalityParameter, provinceParameter, addressParameter, companynameParameter, address_typeParameter, emailParameter, passwordParameter, mobilenoParameter, istypeParameter, isverifiedParameter, isstatusParameter, isgoogleverifiedParameter, state_actionParameter);
        }
    
        public virtual int update_product_inventory(Nullable<int> productid, string productname, Nullable<int> productquantity, Nullable<decimal> productprice, Nullable<decimal> producttotal, string productsupplier, string productimg, Nullable<int> state)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var productquantityParameter = productquantity.HasValue ?
                new ObjectParameter("productquantity", productquantity) :
                new ObjectParameter("productquantity", typeof(int));
    
            var productpriceParameter = productprice.HasValue ?
                new ObjectParameter("productprice", productprice) :
                new ObjectParameter("productprice", typeof(decimal));
    
            var producttotalParameter = producttotal.HasValue ?
                new ObjectParameter("producttotal", producttotal) :
                new ObjectParameter("producttotal", typeof(decimal));
    
            var productsupplierParameter = productsupplier != null ?
                new ObjectParameter("productsupplier", productsupplier) :
                new ObjectParameter("productsupplier", typeof(string));
    
            var productimgParameter = productimg != null ?
                new ObjectParameter("productimg", productimg) :
                new ObjectParameter("productimg", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_product_inventory", productidParameter, productnameParameter, productquantityParameter, productpriceParameter, producttotalParameter, productsupplierParameter, productimgParameter, stateParameter);
        }
    
        public virtual int update_product_status(Nullable<int> prodid, Nullable<int> state)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_product_status", prodidParameter, stateParameter);
        }
    
        public virtual int update_sendAttempts(string email, string code, string action)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_sendAttempts", emailParameter, codeParameter, actionParameter);
        }
    
        public virtual int update_session_stats(string email, string action)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_session_stats", emailParameter, actionParameter);
        }
    
        public virtual int user_status_updater(Nullable<int> id, Nullable<int> action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("user_status_updater", idParameter, actionParameter);
        }
    }
}
